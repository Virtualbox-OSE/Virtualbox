;; @file
; VM - The Virtual Machine.
;

;
; Copyright (C) 2006-2020 Oracle Corporation
;
; This file is part of VirtualBox Open Source Edition (OSE), as
; available from http://www.virtualbox.org. This file is free software;
; you can redistribute it and/or modify it under the terms of the GNU
; General Public License (GPL) as published by the Free Software
; Foundation, in version 2 as it comes in the "COPYING" file of the
; VirtualBox OSE distribution. VirtualBox OSE is distributed in the
; hope that it will be useful, but WITHOUT ANY WARRANTY of any kind.
;
; The contents of this file may alternatively be used under the terms
; of the Common Development and Distribution License Version 1.0
; (CDDL) only, as it comes in the "COPYING.CDDL" file of the
; VirtualBox OSE distribution, in which case the provisions of the
; CDDL are applicable instead of those of the GPL.
;
; You may elect to license modified versions of this file under the
; terms and conditions of either the GPL or the CDDL or both.
;

%ifndef ___VBox_vmm_vm_mac
%define ___VBox_vmm_vm_mac

%include "VBox/vmm/stam.mac"
%include "VBox/param.mac"

;/** This action forces the VM to service check and pending interrups on the APIC. */
%define VMCPU_FF_INTERRUPT_APIC            (1 << 0)
;/** This action forces the VM to service check and pending interrups on the PIC. */
%define VMCPU_FF_INTERRUPT_PIC             (1 << 1)
;/** This action forces the VM to schedule and run pending timer (TM). */
%define VMCPU_FF_TIMER                     (1 << 2)
;/** This action forces the VM to service pending requests from other
; * thread or requests which must be executed in another context. */
%define VMCPU_FF_REQUEST                   (1 << 9)

;;
; This is part of  the VMCPU structure.
struc VMCPU
    .fLocalForcedActions    resd 1
    alignb 8
    .enmState               resd 1
    .idHostCpu              resd 1
    .iHostCpuSet            resd 1

    alignb 64
    .iem                    resb 18496

    alignb 64
    .pVMR3                  RTR3PTR_RES 1
    .pVCpuR0ForVtg          RTR0PTR_RES 1
    .pVMRC                  resq 1
    .pUVCpu                 RTR3PTR_RES 1
    .hNativeThread          RTR0PTR_RES 1
    .hNativeThreadR0        RTR0PTR_RES 1
    .idCpu                  resd 1

    alignb 64
    .hm                     resb 5888
    .nem                    resb 512
    .trpm                   resb 128
    .tm                     resb 5760
    .vmm                    resb 960
    .pdm                    resb 256
    .iom                    resb 512
    .dbgf                   resb 256
    .gim                    resb 512
    .apic                   resb 1792

    .fTraceGroups           resd 1
    .uAdHoc                 resd 1
    alignb 8
    .aStatAdHoc             resb STAMPROFILEADV_size * 8

    alignb 4096
    .pgm                    resb 4096
    alignb 4096
    .cpum                   resb 4096
    alignb 4096
    .em                     resb 40960
    alignb 4096
endstruc

;;
; This is part of  the VM structure.
struc VM
    .enmVMState             resd 1
    .fGlobalForcedActions   resd 1
    .paVMPagesR3            RTR3PTR_RES 1
    .pSession               RTR0PTR_RES 1
    .pUVM                   RTR3PTR_RES 1
    .pVMR3                  RTR3PTR_RES 1
    .pVMR0ForCall           RTR0PTR_RES 1
    .pVMRC                  resq 1
%ifdef IN_RING0
    .hSelfUnsafe            resd 1
    .cCpusUnsafe            resd 1
%else
    .hSelf                  resd 1
    .cCpus                  resd 1
%endif
    .uCpuExecutionCap       resd 1
    .cbSelf                 resd 1
    .cbVCpu                 resd 1
    .uStructVersion         resd 1
    .bMainExecutionEngine   resb 1
    .fHMEnabled             resb 1
    .fUseLargePages         resb 1

    .uPadding1              resb 5

    .hTraceBufR3            RTR3PTR_RES 1
    .hTraceBufR0            RTR0PTR_RES 1

    alignb 64
    .cpum                   resb 1536
    .vmm                    resb 1600
    .pgm                    resb 21120
    .hm                     resb 5504
    .trpm                   resb 5248
    .selm                   resb 768
    .mm                     resb 192
    .pdm                    resb 7808
    .iom                    resb 1152
    .em                     resb 256
    .nem                    resb 128
    .tm                     resb 7872
    .dbgf                   resb 2432
    .ssm                    resb 128
    .gim                    resb 448
    .apic                   resb 128
    .vm                     resb 32
    .cfgm                   resb 8
    .R0Stats                resb 64

    .abAlignment2           resb 600 - 64 + 256 - RTR0PTR_CB * VMM_MAX_CPU_COUNT

    alignb RTR0PTR_CB * VMM_MAX_CPU_COUNT ; ASSUMES VMM_MAX_CPU_COUNT is a power of two.
    .apCpusR3               RTR3PTR_RES VMM_MAX_CPU_COUNT
    alignb 4096

endstruc


%endif

