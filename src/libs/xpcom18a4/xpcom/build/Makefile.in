#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= xpcom
LIBRARY_NAME	= xpcom

PACKAGE_FILE = xpcom.pkg
PACKAGE_VARS += USE_SHORT_LIBNAME

ifdef ENABLE_TESTS
PACKAGE_FILE += xpcom-tests.pkg
endif

# Do not set EXPORT_LIBRARY as we do not want xpcom in the static libs list
#EXPORT_LIBRARY = 1
GRE_MODULE	= 1

REQUIRES	= string \
		  $(NULL)

# pull in MoreFiles for MacOSX
ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
REQUIRES += macmorefiles
endif

CPPSRCS		= nsXPComInit.cpp \
		  nsStringAPI.cpp \
		  $(NULL)

ifeq ($(OS_ARCH),WINNT)
CPPSRCS		+= dlldeps.cpp
endif

ifdef XPCOM_USE_LEA
CSRCS += malloc.c
endif

ifeq ($(OS_TARGET),OS2)
CPPSRCS         += nsOS2VACLegacy.cpp
endif

ifdef GC_LEAK_DETECTOR
EXTRA_DSO_LIBS = boehm
endif

SHARED_LIBRARY_LIBS = \
		$(DIST)/lib/$(LIB_PREFIX)xpcomds_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)xpcomio_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)xpcomcomponents_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)xpcomthreads_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)xpcomproxy_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)xpcombase_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)xptcall.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)xptinfo.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)xpt.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)xptcmd.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)string_s.$(LIB_SUFFIX) \
		$(DIST)/lib/$(LIB_PREFIX)xpcomglue_s.$(LIB_SUFFIX) \
		$(NULL)

LOCAL_INCLUDES	= \
		-I.. \
		-I$(srcdir)/../glue \
		-I$(srcdir)/../base \
		-I$(srcdir)/../ds \
		-I$(srcdir)/../io \
		-I$(srcdir)/../components \
		-I$(srcdir)/../threads \
		-I$(srcdir)/../threads/_xpidlgen \
		-I$(srcdir)/../proxy/src \
		$(NULL)

SDK_HEADERS =  \
		nsXPCOM.h       \
		nsXPCOMCID.h    \
		$(NULL)

SDK_LIBRARY = $(IMPORT_LIBRARY)
SDK_BINARY = $(SHARED_LIBRARY)

# pull in MoreFiles for MacOSX
ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
EXTRA_DSO_LIBS = macmorefiles_s
EXTRA_DSO_LDOPTS += $(EXTRA_DSO_LIBS)
EXTRA_DEPS += $(DIST)/lib/$(LIB_PREFIX)macmorefiles_s.$(LIB_SUFFIX)
endif

# Force use of PIC
FORCE_USE_PIC	= 1 

FORCE_SHARED_LIB = 1

# UNIX98 iconv support
OS_LIBS += $(LIBICONV)

include $(topsrcdir)/config/rules.mk

DEFINES		+= \
		-D_IMPL_NS_COM \
		-DEXPORT_XPT_API \
		-DEXPORT_XPTC_API \
		-DEXPORT_XPTI_API

EXTRA_DSO_LDOPTS += $(NSPR_LIBS)

ifdef GC_LEAK_DETECTOR
DEFINES += -DGC_LEAK_DETECTOR
endif

ifneq (,$(filter mac cocoa,$(MOZ_WIDGET_TOOLKIT)))
CXXFLAGS	+= $(TK_CFLAGS)
EXTRA_DSO_LDOPTS += $(TK_LIBS)
endif

ifeq ($(OS_ARCH),BeOS)
EXTRA_DSO_LDOPTS += -lbe
endif

ifeq ($(OS_ARCH),WINNT)
EXTRA_DSO_LDOPTS += $(call EXPAND_LIBNAME,shell32 ole32 uuid)
ifneq (,$(MOZ_DEBUG)$(NS_TRACE_MALLOC))
EXTRA_DSO_LDOPTS += $(call EXPAND_LIBNAME,imagehlp)
endif
endif # WINNT
