# $Id: W2K3DDK.kmk 3121 2017-10-31 10:58:59Z bird $
## @file
# kBuild SDK - The Microsoft Windows 2003 DDK, targeting $(KBUILD_TARGET).
#

#
# Copyright (c) 2006-2017 knut st. osmundsen <bird-kBuild-spam-xviiv@anduin.net>
#
# This file is part of kBuild.
#
# kBuild is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# kBuild is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with kBuild; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#
# As a special exception you are granted permission to include this file, via
# the kmk include directive, as you wish without this in itself causing the
# resulting makefile, program or whatever to be covered by the GPL license.
# This exception does not however invalidate any other reasons why the makefile,
# program, whatever should not be covered the GPL.
#
#

SDK_W2K3DDK := The Microsoft Windows 2003 DDK, targeting $(KBUILD_TARGET).

# SDK Specific Properties
ifndef PATH_SDK_W2K3DDK
 PATH_SDK_W2K3DDK := $(wildcard $(PATH_DEVTOOLS_TRG)/ddkwin2k3/2*)
 ifeq ($(PATH_SDK_W2K3DDK),)
  PATH_SDK_W2K3DDK := $(wildcard $(PATH_DEVTOOLS_BLD)/ddkwin2k3/2*)
 endif
 ifeq ($(PATH_SDK_W2K3DDK),)
  PATH_SDK_W2K3DDK := $(wildcard $(PATH_DEVTOOLS)/win.x86/ddkwin2k3/2*)
 endif
 ifeq ($(PATH_SDK_W2K3DDK),)
  PATH_SDK_W2K3DDK := $(wildcard $(PATH_DEVTOOLS)/win.amd64/ddkwin2k3/2*)
 endif
 ifeq ($(PATH_SDK_W2K3DDK),)
  PATH_SDK_W2K3DDK := $(wildcard $(PATH_DEVTOOLS)/x86.win32/ddkwin2k3/2*)
 endif
 ifeq ($(PATH_SDK_W2K3DDK),)
  ifneq ($(wildcard $(PATH_DEVTOOLS)/x86.win32/ddkwin2k3/lib/wnet/i386/*.lib),)
   PATH_SDK_W2K3DDK := $(PATH_DEVTOOLS)/x86.win32/ddkwin2k3
  endif
 endif
 ifneq ($(PATH_SDK_W2K3DDK),)
  PATH_SDK_W2K3DDK := $(lastword $(sort $(PATH_SDK_W2K3DDK)))
 else
  $(warning kBuild: PATH_SDK_W2K3DDK couldn't be determined!)
  PATH_SDK_W2K3DDK := $(PATH_DEVTOOLS)/win.x86/ddkwin2k3/not/found
 endif
else
 # Resolve any fancy stuff once and for all.
 PATH_SDK_W2K3DDK := $(PATH_SDK_W2K3DDK)
endif
PATH_SDK_W2K3DDK_INC ?= $(PATH_SDK_W2K3DDK)/inc
PATH_SDK_W2K3DDK_LIB.amd64 ?= $(PATH_SDK_W2K3DDK)/lib/wnet/AMD64
PATH_SDK_W2K3DDK_LIB.x86 ?= $(PATH_SDK_W2K3DDK)/lib/wnet/i386
PATH_SDK_W2K3DDK_LIB ?= $(PATH_SDK_W2K3DDK_LIB.$(KBUILD_TARGET_ARCH))

# General Properties used by kBuild
SDK_W2K3DDK_DEFS.amd64 ?= _AMD64_
SDK_W2K3DDK_DEFS.x86 ?= _X86_
SDK_W2K3DDK_INCS ?= \
	$(PATH_SDK_W2K3DDK_INC)/ddk \
	$(PATH_SDK_W2K3DDK_INC)/ddk/wnet \
	$(PATH_SDK_W2K3DDK_INC)/wnet \
	$(PATH_SDK_W2K3DDK_INC)/ddk/wdm/wnet
SDK_W2K3DDK_LIBPATH.amd64 ?= $(PATH_SDK_W2K3DDK_LIB.amd64)
SDK_W2K3DDK_LIBPATH.x86 ?= $(PATH_SDK_W2K3DDK_LIB.x86)

