# $Id: OPENWATCOM-16.kmk 3121 2017-10-31 10:58:59Z bird $
## @file
# kBuild Tool Config - Open Watcom v1.4 and later, 16-bit targets.
#
# @remarks wrc is untested, so are DLLs, and programs.

#
# Copyright (c) 2008-2017 knut st. osmundsen <bird-kBuild-spam-xviiv@anduin.net>
#
# This file is part of kBuild.
#
# kBuild is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# kBuild is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with kBuild; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#
# As a special exception you are granted permission to include this file, via
# the kmk include directive, as you wish without this in itself causing the
# resulting makefile, program or whatever to be covered by the GPL license.
# This exception does not however invalidate any other reasons why the makefile,
# program, whatever should not be covered the GPL.
#
#

TOOL_OPENWATCOM-16 = Open Watcom v1.4 and later - 16-bit targets.
TOOL_OPENWATCOM-16_EXTENDS = OPENWATCOM
TOOL_OPENWATCOM-16_ASFLAGS.win  ?= -bt=windows
TOOL_OPENWATCOM-16_CFLAGS.win   ?= -bt=windows
TOOL_OPENWATCOM-16_CXXFLAGS.win ?= -bt=windows
TOOL_OPENWATCOM-16_RCFLAGS.win  ?= -bt=windows
TOOL_OPENWATCOM-16_LDFLAGS.win  ?= -bt=windows


TOOL_OPENWATCOM-16_COMPILE_AS_DEPEND =
TOOL_OPENWATCOM-16_COMPILE_AS_DEPORD =
TOOL_OPENWATCOM-16_COMPILE_AS_OUTPUT =
TOOL_OPENWATCOM-16_COMPILE_AS_OUTPUT_MAYBE = $(obj).err
ifdef TOOL_OPENWATCOM_USE_KSUBMIT
define TOOL_OPENWATCOM-16_COMPILE_AS_CMDS
	$(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP_BD,, -P $(DEP_OBJ_INT) -s -f -q -o "$(dep)" -t "$(obj)" "$(obj)") \
		$(TOOL_OPENWATCOM_AS) \
		$(flags) \
		$(addsuffix , $(addprefix -i=, $(call TOOL_OPENWATCOM_FIX_SLASHES,$(incs)))) \
		$(addprefix -d, $(defs)) \
		-fo=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)) \
		-fr=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)).err \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(abspath $(source)))
endef
else
define TOOL_OPENWATCOM-16_COMPILE_AS_CMDS
	$(QUIET) $(call TOOL_OPENWATCOM_ENV_SETUP_BD) $(TOOL_OPENWATCOM_AS) \
		$(flags) \
		$(addsuffix , $(addprefix -i=, $(call TOOL_OPENWATCOM_FIX_SLASHES,$(incs)))) \
		$(addprefix -d, $(defs)) \
		-fo=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)) \
		-fr=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)).err \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(abspath $(source)))
	$(QUIET)$(DEP_OBJ) -s -f -q -o "$(dep)" -t "$(obj)" "$(obj)"
endef
endif

TOOL_OPENWATCOM-16_COMPILE_C_DEPEND =
TOOL_OPENWATCOM-16_COMPILE_C_DEPORD =
TOOL_OPENWATCOM-16_COMPILE_C_OUTPUT =
TOOL_OPENWATCOM-16_COMPILE_C_OUTPUT_MAYBE = $(obj).err
ifdef TOOL_OPENWATCOM_USE_KSUBMIT
define TOOL_OPENWATCOM-16_COMPILE_C_CMDS
	$(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP_BD,, -P $(DEP_OBJ_INT) -s -f -q -o "$(dep)" -t "$(obj)" "$(obj)") \
		$(TOOL_OPENWATCOM_CC16) \
		$(flags) \
		$(addsuffix , $(addprefix -i=, $(call TOOL_OPENWATCOM_FIX_SLASHES,$(incs)))) \
		$(addprefix -d, $(defs)) \
		-fo=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)) \
		-fr=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)).err \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(abspath $(source)))
endef
else
define TOOL_OPENWATCOM-16_COMPILE_C_CMDS
	$(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP_BD) $(TOOL_OPENWATCOM_CC16) \
		$(flags) \
		$(addsuffix , $(addprefix -i=, $(call TOOL_OPENWATCOM_FIX_SLASHES,$(incs)))) \
		$(addprefix -d, $(defs)) \
		-fo=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)) \
		-fr=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)).err \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(abspath $(source)))
	$(QUIET)$(DEP_OBJ) -s -f -q -o "$(dep)" -t "$(obj)" "$(obj)"
endef
endif

TOOL_OPENWATCOM-16_COMPILE_CXX_DEPEND =
TOOL_OPENWATCOM-16_COMPILE_CXX_DEPORD =
TOOL_OPENWATCOM-16_COMPILE_CXX_OUTPUT =
TOOL_OPENWATCOM-16_COMPILE_CXX_OUTPUT_MAYBE = $(obj).err
ifdef TOOL_OPENWATCOM_USE_KSUBMIT
define TOOL_OPENWATCOM-16_COMPILE_CXX_CMDS
	$(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP_BD,, -P $(DEP_OBJ_INT) -s -f -q -o "$(dep)" -t "$(obj)" "$(obj)") \
		$(TOOL_OPENWATCOM_CXX16) \
		$(flags) \
		$(addsuffix , $(addprefix -i=, $(call TOOL_OPENWATCOM_FIX_SLASHES,$(incs)))) \
		$(addprefix -d, $(defs)) \
		-fo=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)) \
		-fr=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)).err \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(abspath $(source)))
endef
else
define TOOL_OPENWATCOM-16_COMPILE_CXX_CMDS
	$(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP_BD) $(TOOL_OPENWATCOM_CXX16) \
		$(flags) \
		$(addsuffix , $(addprefix -i=, $(call TOOL_OPENWATCOM_FIX_SLASHES,$(incs)))) \
		$(addprefix -d, $(defs)) \
		-fo=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)) \
		-fr=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)).err \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(abspath $(source)))
	$(QUIET)$(DEP_OBJ) -s -f -q -o "$(dep)" -t "$(obj)" "$(obj)"
endef
endif

TOOL_OPENWATCOM-16_COMPILE_RC_OUTPUT =
TOOL_OPENWATCOM-16_COMPILE_RC_DEPEND =
TOOL_OPENWATCOM-16_COMPILE_RC_DEPORD =
define TOOL_OPENWATCOM-16_COMPILE_RC_CMDS
	$(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP) \
		$(TOOL_OPENWATCOM_RC) -r\
		$(flags) \
		$(addprefix -i=, $(call TOOL_OPENWATCOM_FIX_SLASHES,$(incs))) \
		$(addprefix -d, $(defs))\
		-fo=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(obj)) \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(abspath $(source)))
endef

TOOL_OPENWATCOM-16_LINK_LIBRARY_OUTPUT = $(outbase).rsp
TOOL_OPENWATCOM-16_LINK_LIBRARY_DEPEND = $(othersrc)
TOOL_OPENWATCOM-16_LINK_LIBRARY_DEPORD =
define TOOL_OPENWATCOM-16_LINK_LIBRARY_CMDS
	$(QUIET)$(APPEND) -tn $(outbase).rsp $(foreach obj,$(call TOOL_OPENWATCOM_FIX_SLASHES,$(objs) $(othersrc)),'+"$(obj)"')
	$(QUIET)$(TOOL_OPENWATCOM_ENV_SETUP_BD) $(TOOL_OPENWATCOM_AR) $(flags) $(call TOOL_OPENWATCOM_FIX_SLASHES,$(out)) @$(outbase).rsp
endef

TOOL_OPENWATCOM-16_LINK_PROGRAM_OUTPUT = $(outbase).map
TOOL_OPENWATCOM-16_LINK_PROGRAM_OUTPUT_MAYBE = $(outbase).sym
TOOL_OPENWATCOM-16_LINK_PROGRAM_DEPEND = $(foreach lib,$(libs),$(if $(findstring $(lib),$(subst /,x,$(lib))),, $(lib))) $(othersrc)
TOOL_OPENWATCOM-16_LINK_PROGRAM_DEPORD =
define TOOL_OPENWATCOM-16_LINK_PROGRAM_CMDS
	$(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP_BD,$(subst $(SP),,$(addsuffix ;,$(libpath))),-C $(dir $(out))) \
		$(TOOL_OPENWATCOM_LD16) \
		$(flags) \
		-fe=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(out)) \
		-fm=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(outbase).map) \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(filter-out %.res,$(objs))) \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(libs)) \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(othersrc))
	$(if $(filter %.res,$(objs)), $(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP) \
		$(TOOL_OPENWATCOM_RC) \
			$(filter -bt=%,$(flags)) \
			/fe=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(out)) \
			$(call TOOL_OPENWATCOM_FIX_SLASHES,$(filter %.res,$(objs))))
endef

TOOL_OPENWATCOM-16_LINK_DLL_OUTPUT = $(outbase).map
TOOL_OPENWATCOM-16_LINK_DLL_OUTPUT_MAYBE = $(outbase).sym
TOOL_OPENWATCOM-16_LINK_DLL_DEPEND = $(foreach lib,$(libs),$(if $(findstring $(lib),$(subst /,x,$(lib))),, $(lib))) $(othersrc)
TOOL_OPENWATCOM-16_LINK_DLL_DEPORD =
define TOOL_OPENWATCOM-16_LINK_DLL_CMDS
	$(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP_BD,$(subst $(SP),,$(addsuffix ;,$(libpath))),-C $(dir $(out))) \
		$(TOOL_OPENWATCOM_LD16) \
		$(flags) \
		-fe=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(out)) \
		-fm=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(outbase).map) \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(filter-out %.res,$(objs))) \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(libs)) \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(othersrc))
	$(if $(filter %.res,$(objs)), $(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP) \
		$(TOOL_OPENWATCOM_RC) \
			$(filter -bt=%,$(flags)) \
			/fe=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(out)) \
			$(call TOOL_OPENWATCOM_FIX_SLASHES,$(filter %.res,$(objs))))
endef

TOOL_OPENWATCOM-16_LINK_SYSMOD_OUTPUT = $(outbase).map
TOOL_OPENWATCOM-16_LINK_SYSMOD_OUTPUT_MAYBE = $(outbase).sym
TOOL_OPENWATCOM-16_LINK_SYSMOD_DEPEND = $(foreach lib,$(libs),$(if $(findstring $(lib),$(subst /,x,$(lib))),, $(lib))) $(othersrc)
TOOL_OPENWATCOM-16_LINK_SYSMOD_DEPORD =
define TOOL_OPENWATCOM-16_LINK_SYSMOD_CMDS
	$(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP_BD,$(subst $(SP),,$(addsuffix ;,$(libpath))),-C $(dir $(out))) \
		$(TOOL_OPENWATCOM_LD16) \
		$(flags) \
		-fe=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(out)) \
		-fm=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(outbase).map) \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(filter-out %.res,$(objs))) \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(libs)) \
		$(call TOOL_OPENWATCOM_FIX_SLASHES,$(othersrc))
	$(if $(filter %.res,$(objs)), $(QUIET)$(call TOOL_OPENWATCOM_ENV_SETUP) \
		$(TOOL_OPENWATCOM_RC) \
			$(filter -bt=%,$(flags)) \
			/fe=$(call TOOL_OPENWATCOM_FIX_SLASHES,$(out)) \
			$(call TOOL_OPENWATCOM_FIX_SLASHES,$(filter %.res,$(objs))))
endef

