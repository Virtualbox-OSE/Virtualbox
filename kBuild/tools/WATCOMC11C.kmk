# $Id: WATCOMC11C.kmk 3121 2017-10-31 10:58:59Z bird $
## @file
# kBuild Tool Config - Watcom C v11.0c
#

#
# Copyright (c) 2008-2017 knut st. osmundsen <bird-kBuild-spam-xviiv@anduin.net>
#
# This file is part of kBuild.
#
# kBuild is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# kBuild is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with kBuild; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#
# As a special exception you are granted permission to include this file, via
# the kmk include directive, as you wish without this in itself causing the
# resulting makefile, program or whatever to be covered by the GPL license.
# This exception does not however invalidate any other reasons why the makefile,
# program, whatever should not be covered the GPL.
#
#

TOOL_WATCOMC11C = Watcom C/C++ v11.0c (generic)

ifeq ($(PATH_TOOL_WATCOMC11C),)
 ifeq ($(PATH_TOOL_WATCOMC11C),)
  PATH_TOOL_WATCOMC11C := $(wildcard $(KBUILD_DEVTOOLS_HST)/watcom/v11.0c*)
 endif
 ifeq ($(PATH_TOOL_WATCOMC11C),)
  PATH_TOOL_WATCOMC11C := $(wildcard $(KBUILD_DEVTOOLS_TRG)/watcom/v11.0c*)
 endif
 ifeq ($(PATH_TOOL_WATCOMC11C),)
  PATH_TOOL_WATCOMC11C := $(wildcard $(KBUILD_DEVTOOLS)/common/watcom/v11.0c*)
 endif
 ifeq ($(PATH_TOOL_WATCOMC11C)$(KBUILD_HOST),os2)
  if1of ($(USER) $(USERNAME) $(LOGNAME), bird)
   PATH_TOOL_WATCOMC11C := $(wildcard d:/dev/Watcom/v11.0c*)
  endif
 endif
 PATH_TOOL_WATCOMC11C := $(firstword $(sort $(PATH_TOOL_WATCOMC11C)))
 # if not found, we'll enter 'pathless' mode.
else
 # Resolve any fancy stuff once and for all.
 PATH_TOOL_WATCOMC11C := $(PATH_TOOL_WATCOMC11C)
endif

ifneq ($(PATH_TOOL_WATCOMC11C),)
 TOOL_WATCOMC11C_PATHLESS := no

 ifeq ($(KBUILD_HOST),os2)
  PATH_TOOL_WATCOMC11C_BIN   = $(PATH_TOOL_WATCOMC11C)/binp
  PATH_TOOL_WATCOMC11C_BIN2  = $(PATH_TOOL_WATCOMC11C)/binw
  TOOL_WATCOMC11C_ENV_SETUP ?= $(REDIRECT) \
 	-E 'BEGINLIBPATH=$(PATH_TOOL_WATCOMC11C)/binp/dll;$(BEGINLIBPATH)' \
 	-E 'LIBPATHSTRICT=T' \
 	-E 'PATH=$(PATH_TOOL_WATCOMC11C_BIN);$(PATH_TOOL_WATCOMC11C_BIN2)' \
 	-E 'WATCOM=$(PATH_TOOL_WATCOMC11C)' \
 	-E 'EDPATH=$(PATH_TOOL_WATCOMC11C)/EDDAT' \
 	-E 'LIB=$1' \
 	-E 'INCLUDE=' \
 	$2 --
 else
  PATH_TOOL_WATCOMC11C_BIN   = $(PATH_TOOL_WATCOMC11C)/binnt
  PATH_TOOL_WATCOMC11C_BIN2  = $(PATH_TOOL_WATCOMC11C_BIN)
  TOOL_WATCOMC11C_ENV_SETUP ?= $(REDIRECT) \
 	-E 'PATH=$(PATH_TOOL_WATCOMC11C_BIN);$(PATH_TOOL_WATCOMC11C)/binw' \
 	-E 'WATCOM=$(PATH_TOOL_WATCOMC11C)' \
 	-E 'EDPATH=$(PATH_TOOL_WATCOMC11C)/EDDAT' \
 	-E 'LIB=$1' \
 	-E 'INCLUDE=' \
 	$2 --
 endif

 TOOL_WATCOMC11C_CC    ?= $(PATH_TOOL_WATCOMC11C_BIN)/wcc386$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_CC16  ?= $(PATH_TOOL_WATCOMC11C_BIN)/wcc$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_CXX   ?= $(PATH_TOOL_WATCOMC11C_BIN)/wpp386$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_CXX16 ?= $(PATH_TOOL_WATCOMC11C_BIN)/wpp$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_AS    ?= $(PATH_TOOL_WATCOMC11C_BIN)/wasm$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_AR    ?= $(PATH_TOOL_WATCOMC11C_BIN)/wlib$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_RC    ?= $(PATH_TOOL_WATCOMC11C_BIN2)/wrc$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_LD    ?= $(PATH_TOOL_WATCOMC11C_BIN2)/wcl386$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_LD16  ?= $(PATH_TOOL_WATCOMC11C_BIN2)/wcl$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_WLINK ?= $(PATH_TOOL_WATCOMC11C_BIN2)/wlink$(HOSTSUFF_EXE)

else
 # Pathless, relies on the environment.
 TOOL_WATCOMC11C_PATHLESS :=
 TOOL_WATCOMC11C_ENV_SETUP ?= $(REDIRECT) \
 	-E 'LIB=$1' \
 	-E 'INCLUDE=' \
 	$2 --
 TOOL_WATCOMC11C_CC    ?= wcc386$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_CC16  ?= wcc$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_CXX   ?= wpp386$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_CXX16 ?= wpp$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_AS    ?= wasm$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_AR    ?= wlib$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_RC    ?= wrc$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_LD    ?= wcl386$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_LD16  ?= wcl$(HOSTSUFF_EXE)
 TOOL_WATCOMC11C_WLINK ?= wcl$(HOSTSUFF_EXE)

endif

if $(KBUILD_KMK_REVISION) >= 2747
 TOOL_WATCOMC11C_ENV_SETUP_BD ?= $(call TOOL_WATCOMC11C_ENV_SETUP,$1,$2 --wcc-brain-damage)
else
 TOOL_WATCOMC11C_ENV_SETUP_BD ?= $(call TOOL_WATCOMC11C_ENV_SETUP,$1,$2)
endif


# General Properties used by kBuild
TOOL_WATCOMC11C_COBJSUFF         ?= .obj
TOOL_WATCOMC11C_CFLAGS           ?= -zq
TOOL_WATCOMC11C_CFLAGS.dos       ?= -bt=dos
TOOL_WATCOMC11C_CFLAGS.os2       ?= -bt=os2
TOOL_WATCOMC11C_CFLAGS.win       ?= -bt=nt
ifdef PATH_TOOL_WATCOMC11C
 TOOL_WATCOMC11C_CINCS           ?= $(PATH_TOOL_WATCOMC11C)/h
endif

TOOL_WATCOMC11C_CXXOBJSUFF       ?= .obj
TOOL_WATCOMC11C_CXXFLAGS         ?= -zq
TOOL_WATCOMC11C_CXXFLAGS.dos     ?= -bt=dos
TOOL_WATCOMC11C_CXXFLAGS.os2     ?= -bt=os2
TOOL_WATCOMC11C_CXXFLAGS.win     ?= -bt=nt
ifdef PATH_TOOL_WATCOMC11C
 TOOL_WATCOMC11C_CXXINCS         ?= $(PATH_TOOL_WATCOMC11C)/h
endif

TOOL_WATCOMC11C_RCOBJSUFF        ?= .res
TOOL_WATCOMC11C_RCFLAGS          ?= -r
ifdef PATH_TOOL_WATCOMC11C
 TOOL_WATCOMC11C_RCINCS          ?= $(PATH_TOOL_WATCOMC11C)/h
endif

TOOL_WATCOMC11C_ARFLAGS          ?= -q
TOOL_WATCOMC11C_ARLIBSUFF        ?= .lib

TOOL_WATCOMC11C_LDFLAGS          ?= -zq -y
TOOL_WATCOMC11C_LDFLAGS.dos      ?= -bt=dos
TOOL_WATCOMC11C_LDFLAGS.os2      ?= -bt=os2
TOOL_WATCOMC11C_LDFLAGS.win      ?= -bt=nt


TOOL_WATCOMC11C_COMPILE_C_DEPEND =
TOOL_WATCOMC11C_COMPILE_C_DEPORD =
TOOL_WATCOMC11C_COMPILE_C_OUTPUT = $(obj).err
define TOOL_WATCOMC11C_COMPILE_C_CMDS
	$(QUIET) $(call TOOL_WATCOMC11C_ENV_SETUP_BD) $(TOOL_WATCOMC11C_CC) \
		$(flags) \
		$(addsuffix , $(addprefix -i=, $(subst /,\\,$(incs)))) \
		$(addprefix -d, $(defs)) \
		-fo=$(subst /,\\,$(obj)) \
		-fr=$(subst /,\\,$(obj)).err \
		$(subst /,\\,$(abspath $(source)))
	$(QUIET)$(APPEND) -n $(obj).err
## @todo dependencies
endef

TOOL_WATCOMC11C_COMPILE_CXX_DEPEND =
TOOL_WATCOMC11C_COMPILE_CXX_DEPORD =
TOOL_WATCOMC11C_COMPILE_CXX_OUTPUT = $(obj).err
define TOOL_WATCOMC11C_COMPILE_CXX_CMDS
	$(QUIET) $(call TOOL_WATCOMC11C_ENV_SETUP_BD) $(TOOL_WATCOMC11C_CXX) \
		$(flags) \
		$(addsuffix , $(addprefix -i=, $(subst /,\\,$(incs)))) \
		$(addprefix -d, $(defs)) \
		-fo=$(subst /,\\,$(obj)) \
		-fr=$(subst /,\\,$(obj)).err \
		$(subst /,\\,$(abspath $(source)))
	$(QUIET)$(APPEND) -n $(obj).err
## @todo dependencies
endef

TOOL_WATCOMC11C_COMPILE_RC_OUTPUT =
TOOL_WATCOMC11C_COMPILE_RC_DEPEND =
TOOL_WATCOMC11C_COMPILE_RC_DEPORD =
define TOOL_WATCOMC11C_COMPILE_RC_CMDS
	$(QUIET) $(call TOOL_WATCOMC11C_ENV_SETUP) \
		$(TOOL_WATCOMC11C_RC) -r\
		$(flags) \
		$(addprefix -i=, $(subst /,\\,$(incs))) \
		$(addprefix -d, $(defs))\
		-fo=$(subst /,\\,$(obj)) \
		$(subst /,\\,$(abspath $(source)))
endef

TOOL_WATCOMC11C_LINK_LIBRARY_OUTPUT = $(outbase).rsp
TOOL_WATCOMC11C_LINK_LIBRARY_DEPEND = $(othersrc)
TOOL_WATCOMC11C_LINK_LIBRARY_DEPORD =
define TOOL_WATCOMC11C_LINK_LIBRARY_CMDS
	$(QUIET)$(APPEND) -tn $(outbase).rsp $(foreach obj,$(subst /,\,$(objs) $(othersrc)),'+"$(obj)"')
	$(QUIET)$(TOOL_WATCOMC11C_ENV_SETUP_BD) $(TOOL_WATCOMC11C_AR) $(flags) $(subst /,\\,$(out)) @$(outbase).rsp
endef

TOOL_WATCOMC11C_LINK_PROGRAM_OUTPUT = $(outbase).map
TOOL_WATCOMC11C_LINK_PROGRAM_DEPEND = $(foreach lib,$(libs),$(if $(findstring $(lib),$(subst /,x,$(lib))),, $(lib))) $(othersrc)
TOOL_WATCOMC11C_LINK_PROGRAM_DEPORD =
define TOOL_WATCOMC11C_LINK_PROGRAM_CMDS
	$(QUIET)$(call TOOL_WATCOMC11C_ENV_SETUP_BD,$(subst $(SP),,$(addsuffix ;,$(libpath))),-C $(dir $(out))) \
		$(TOOL_WATCOMC11C_LD) \
		$(flags) \
		-fe=$(subst /,\\,$(out)) \
		-fm=$(subst /,\\,$(outbase).map) \
		$(subst /,\\,$(filter-out %.res,$(objs))) \
		$(subst /,\\,$(libs)) \
		$(subst /,\\,$(othersrc))
	$(if $(filter %.res,$(objs)), $(QUIET)$(call TOOL_WATCOMC11C_ENV_SETUP) \
		$(TOOL_WATCOMC11C_RC) \
			$(filter -bt=%,$(flags)) \
			/fe=$(subst /,\\,$(out)) \
			$(subst /,\\,$(filter %.res,$(objs))))
endef

TOOL_WATCOMC11C_LINK_DLL_OUTPUT = $(outbase).map
TOOL_WATCOMC11C_LINK_DLL_DEPEND = $(foreach lib,$(libs),$(if $(findstring $(lib),$(subst /,x,$(lib))),, $(lib))) $(othersrc)
TOOL_WATCOMC11C_LINK_DLL_DEPORD =
define TOOL_WATCOMC11C_LINK_DLL_CMDS
	$(QUIET)$(call TOOL_WATCOMC11C_ENV_SETUP_BD,$(subst $(SP),,$(addsuffix ;,$(libpath))),-C $(dir $(out))) \
		$(TOOL_WATCOMC11C_LD) \
		$(flags) \
		-fe=$(subst /,\\,$(out)) \
		-fm=$(subst /,\\,$(outbase).map) \
		$(subst /,\\,$(filter-out %.res,$(objs))) \
		$(subst /,\\,$(libs)) \
		$(subst /,\\,$(othersrc))
	$(if $(filter %.res,$(objs)), $(QUIET)$(call TOOL_WATCOMC11C_ENV_SETUP) \
		$(TOOL_WATCOMC11C_RC) \
			$(filter -bt=%,$(flags)) \
			/fe=$(subst /,\\,$(out)) \
			$(subst /,\\,$(filter %.res,$(objs))))
endef

TOOL_WATCOMC11C_LINK_SYSMOD_OUTPUT = $(outbase).map
TOOL_WATCOMC11C_LINK_SYSMOD_DEPEND = $(foreach lib,$(libs),$(if $(findstring $(lib),$(subst /,x,$(lib))),, $(lib))) $(othersrc)
TOOL_WATCOMC11C_LINK_SYSMOD_DEPORD =
define TOOL_WATCOMC11C_LINK_SYSMOD_CMDS
	$(QUIET)$(call TOOL_WATCOMC11C_ENV_SETUP_BD,$(subst $(SP),,$(addsuffix ;,$(libpath))),-C $(dir $(out))) \
		$(TOOL_WATCOMC11C_LD) \
		$(flags) \
		-fe=$(subst /,\\,$(out)) \
		-fm=$(subst /,\\,$(outbase).map) \
		$(subst /,\\,$(filter-out %.res,$(objs))) \
		$(subst /,\\,$(libs)) \
		$(subst /,\\,$(othersrc))
	$(if $(filter %.res,$(objs)), $(QUIET)$(call TOOL_WATCOMC11C_ENV_SETUP) \
		$(TOOL_WATCOMC11C_RC) \
			$(filter -bt=%,$(flags)) \
			/fe=$(subst /,\\,$(out)) \
			$(subst /,\\,$(filter %.res,$(objs))))
endef


