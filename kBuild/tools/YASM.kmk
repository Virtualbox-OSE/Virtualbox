# $Id: YASM.kmk 3121 2017-10-31 10:58:59Z bird $
## @file
# kBuild Tool Config - YASM 0.4.0 or later.
#

#
# Copyright (c) 2006-2017 knut st. osmundsen <bird-kBuild-spam-xviiv@anduin.net>
#
# This file is part of kBuild.
#
# kBuild is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# kBuild is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with kBuild; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#
# As a special exception you are granted permission to include this file, via
# the kmk include directive, as you wish without this in itself causing the
# resulting makefile, program or whatever to be covered by the GPL license.
# This exception does not however invalidate any other reasons why the makefile,
# program, whatever should not be covered the GPL.
#
#

TOOL_YASM := YASM v0.4.0+

# Tool Specific Properties
ifndef PATH_TOOL_YASM
 PATH_TOOL_YASM := $(sort $(wildcard $(KBUILD_DEVTOOLS_HST)/yasm/v*.*))
 ifneq ($(PATH_TOOL_YASM),)
  PATH_TOOL_YASM := $(call lastword,$(PATH_TOOL_YASM))
 endif
else
 # Resolve any fancy stuff once and for all.
 PATH_TOOL_YASM := $(PATH_TOOL_YASM)
endif
ifneq ($(PATH_TOOL_YASM),)
 TOOL_YASM_AS ?= $(PATH_TOOL_YASM)/yasm$(HOSTSUFF_EXE)
else
 TOOL_YASM_AS ?= yasm$(HOSTSUFF_EXE)
endif

# kSubmit
ifdef TOOL_YASM_USE_KSUBMIT
 ifeq ($(KBUILD_HOST),win)
  TOOL_YASM_KSUBMIT ?= kmk_builtin_kSubmit --
 endif
endif

# General Properties used by kBuild
TOOL_YASM_ASFLAGS ?=


## Compile Assembly source.
# @param    $(target)   Normalized main target name.
# @param    $(source)   Source filename (relative).
# @param    $(obj)      Object file name. This shall be (re)created by the compilation.
# @param    $(dep)      Dependcy file. This shall be (re)created by the compilation.
# @param    $(flags)    Flags.
# @param    $(defs)     Definitions. No -D or something.
# @param    $(incs)     Includes. No -I or something.
# @param    $(dirdep)   Directory creation dependency.
# @param    $(deps)     Other dependencies.
# @param    $(outbase)  Output basename (full). Use this for list files and such.
# @param    $(objsuff)  Object suffix.
#
TOOL_YASM_COMPILE_AS_OUTPUT = $(outbase).lst
TOOL_YASM_COMPILE_AS_OUTPUT_MAYBE = $(obj).map
TOOL_YASM_COMPILE_AS_DEPEND =
TOOL_YASM_COMPILE_AS_DEPORD =
define TOOL_YASM_COMPILE_AS_CMDS
ifdef TOOL_YASM_KSUBMIT # yasm 1.3.0 w/ patches.
	$(QUIET)$(TOOL_YASM_KSUBMIT) $(TOOL_YASM_AS)\
		$(patsubst --mapfile%,--mapfile=$(obj).map,$(flags))\
		$(addsuffix /,$(addprefix -I, $(incs))) $(addprefix -D, $(defs))\
		-l $(outbase).lst\
		-o $(obj)\
		-MD="$(dep)" -MP --makedep-dos2unix-slash\
		$(abspath $(source))
else
	$(QUIET)$(TOOL_YASM_AS)\
		$(patsubst --mapfile%,--mapfile=$(obj).map,$(flags))\
		$(addsuffix /,$(addprefix -I, $(incs))) $(addprefix -D, $(defs))\
		-l $(outbase).lst\
		-o $(obj)\
		$(abspath $(source))
	$(QUIET)$(REDIRECT) -wo $(dep) -- $(TOOL_YASM_AS) -DKBUILD_GENERATING_MAKEFILE_DEPENDENCIES\
		$(patsubst --mapfile%,--mapfile=$(obj).map,$(flags))\
		$(addsuffix /,$(addprefix -I, $(incs))) $(addprefix -D, $(defs))\
		-o $(obj) \
		$(abspath $(source)) \
		-M
 if1of ($(KBUILD_HOST), win nt os2)
	$(QUIET)$(SED) -e 's/\\\(.\)/\/\1/g' --output "$(dep).tmp" "$(dep)"
 else
	$(QUIET)$(CP) -f -- "$(dep)" "$(dep).tmp"
 endif
	$(QUIET)$(APPEND) -n "$(dep).tmp" "" ""
	$(QUIET)$(SED) $(if $(intersects $(KBUILD_HOST), win nt os2), -e 's/\\\(.\)/\/\1/g',)\
		-e 's/^[^ ]*: / /'\
		-e 's/ *\\$$(DOLLAR)//'\
		-e 's/^ *//'\
		-e 's/  */\n/g'\
		-e 's/ *\([^ \n][^ \n]*\)/\1:\n/g'\
		--append "$(dep).tmp"\
		"$(dep)"
	$(QUIET)$(MV) -f -- "$(dep).tmp" "$(dep)"
endif
endef

